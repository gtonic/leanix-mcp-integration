{
  "openapi": "3.0.1",
  "info": {
    "title": "Pathfinder",
    "description": "Core application for storage and analysis of IT landscape data",
    "version": "5.0.1100"
  },
  "servers": [
    {
      "url": "/services/pathfinder/v1"
    }
  ],
  "tags": [
    {
      "name": "/assets",
      "description": "Download of assets"
    },
    {
      "name": "/bookmarkShares",
      "description": "Manage bookmark shares"
    },
    {
      "name": "/bookmarks",
      "description": "Manage bookmarks"
    },
    {
      "name": "/exports",
      "description": "Im- and Export data"
    },
    {
      "name": "/factSheets",
      "description": "Offers various CRUD operations for Fact Sheets.\n"
    },
    {
      "name": "/features",
      "description": "Get features"
    },
    {
      "name": "/graphql",
      "description": "Process GraphQL requests"
    },
    {
      "name": "/models",
      "description": "Manage data models and authorization"
    },
    {
      "name": "/settings",
      "description": "Get and update workspace settings"
    },
    {
      "name": "/suggestions",
      "description": "Retrieves a list of suggestions for a given search term"
    }
  ],
  "paths": {
    "/assets/{asset}": {
      "get": {
        "tags": [
          "/assets"
        ],
        "summary": "downloadAsset",
        "description": "Download an asset",
        "operationId": "downloadAsset",
        "parameters": [
          {
            "name": "asset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "logo-export",
                "favicon",
                "logo-menu",
                "logo-menu",
                "menu-background"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "image/*": {

              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "/assets"
        ],
        "summary": "upsertAsset",
        "description": "Upsert an asset",
        "operationId": "upsertAsset",
        "parameters": [
          {
            "name": "asset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "logo-export",
                "favicon",
                "logo-menu",
                "logo-menu",
                "menu-background"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {

              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "/assets"
        ],
        "summary": "deleteAsset",
        "description": "Delete an asset",
        "operationId": "deleteAsset",
        "parameters": [
          {
            "name": "asset",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "logo-export",
                "favicon",
                "logo-menu",
                "logo-menu",
                "menu-background"
              ]
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "*/*": {

              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/bookmarkShares": {
      "get": {
        "tags": [
          "/bookmarkShares"
        ],
        "summary": "getBookmarkShares",
        "description": "Retrieves all stored bookmark shared by the calling user.",
        "operationId": "getBookmarkShares",
        "parameters": [
          {
            "name": "bookmarkId",
            "in": "query",
            "description": "Specifies the bookmark id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkSharesResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "/bookmarkShares"
        ],
        "summary": "createBookmarkShares",
        "description": "Saves a bookmark share in the database",
        "operationId": "createBookmarkShare",
        "requestBody": {
          "description": "Field SharedByUserId, if set, needs to be same as the calling user's id.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookmarkShareInputData"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Insert successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkSharesResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to save shares"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "/bookmarkShares"
        ],
        "summary": "deleteBookmarkShares",
        "description": "Deletes a bookmark share by the calling user.",
        "operationId": "deleteBookmarkShare",
        "parameters": [
          {
            "name": "bookmarkId",
            "in": "query",
            "description": "Specifies the bookmark id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sharedWithUserId",
            "in": "query",
            "description": "Specifies the sharedWith userId",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletion successful"
          },
          "404": {
            "description": "Invalid ID supplied"
          },
          "403": {
            "description": "No permission to delete bookmark share"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/bookmarks/{id}": {
      "get": {
        "tags": [
          "/bookmarks"
        ],
        "summary": "getBookmark",
        "description": "Retrieves a bookmark by its ID. If the version is not specified, the latest version will be retrieved.\nIf the 'markAsViewed' flag is set to true when retrieving older versions, the 'views' count for that bookmark will be incremented.",
        "operationId": "getBookmark",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "markAsViewed",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully Retrieved a bookmark",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkResponse"
                },
                "examples": {
                  "Successfully Retrieved a bookmark": {
                    "description": "Successfully Retrieved a bookmark",
                    "value": {
                      "data": {

                      },
                      "status": "OK",
                      "type": "Bookmark"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Permission denied"
          },
          "404": {
            "description": "Bookmark not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkResponse"
                },
                "examples": {
                  "Bookmark not found": {
                    "description": "Bookmark not found",
                    "value": {
                      "status": "ERROR",
                      "type": "NotFoundException",
                      "errorMessage": "Bookmark with id \u003Cbookmark-uuid\u003E and version \u003Cversion-number\u003E not found",
                      "errors": [
                        {
                          "value": "error",
                          "messages": [
                            "Bookmark with id \u003Cbookmark-uuid\u003E and version \u003Cversion-number\u003E not found"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/bookmarks"
        ],
        "summary": "updateBookmark",
        "description": "Updates a bookmark stored in the database. Only if the state changes,a new bookmark version will be created.\nIf the optional value `version` is specified, ONLY the message of the specified version will be updated.\n",
        "operationId": "updateBookmark",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "bookmark",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bookmark"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully updated a bookmark",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkResponse"
                },
                "examples": {
                  "Successfully updated a bookmark": {
                    "description": "Successfully updated a bookmark",
                    "value": {
                      "data": {

                      },
                      "status": "OK",
                      "type": "Bookmark"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "/bookmarks"
        ],
        "summary": "deleteBookmark",
        "description": "Deletes all versions of a bookmark identified by the given ID.",
        "operationId": "deleteBookmark",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletion successful"
          },
          "403": {
            "description": "No permission to delete relation"
          },
          "404": {
            "description": "Invalid ID supplied"
          },
          "500": {
            "description": "Deletion successful"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "/bookmarks"
        ],
        "summary": "changeBookmarkOwner",
        "description": "Updates a bookmark stored in the database by changing the owner of the bookmark.",
        "operationId": "changeBookmarkOwner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "newOwner",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully changed bookmark owner",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/bookmarks": {
      "get": {
        "tags": [
          "/bookmarks"
        ],
        "summary": "getBookmarks",
        "description": "Retrieves all latest versions of stored bookmarks a user can read.",
        "operationId": "getBookmarks",
        "parameters": [
          {
            "name": "bookmarkType",
            "in": "query",
            "description": "Specifies the bookmark type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "INVENTORY",
                "REPORTING",
                "VISUALIZER",
                "DASHBOARD",
                "INVENTORY_EXPORT"
              ]
            }
          },
          {
            "name": "oDataOnly",
            "in": "query",
            "description": "Filter for OData bookmarks",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "groupKey",
            "in": "query",
            "description": "A key used to separate bookmarks within the same query type",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Bookmarks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkListResponse"
                },
                "examples": {
                  "Bookmarks retrieved successfully": {
                    "description": "Bookmarks retrieved successfully",
                    "value": {
                      "status": "OK",
                      "type": "Bookmark",
                      "data": [
                        {

                        },
                        {

                        }
                      ],
                      "total": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameter given",
            "content": {
              "application/json": {
                "examples": {
                  "Invalid value for query param bookmarkType": {
                    "description": "Invalid value for query param bookmarkType",
                    "value": {
                      "code": 400,
                      "message": "query param bookmarkType must be one of [INVENTORY, REPORTING, VISUALIZER, DASHBOARD, INVENTORY_EXPORT]"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "/bookmarks"
        ],
        "summary": "createBookmark",
        "description": "Saves a bookmark in the database with an initial version 1.",
        "operationId": "createBookmark",
        "requestBody": {
          "description": "bookmark",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Bookmark"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully created a bookmark",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkResponse"
                },
                "examples": {
                  "Successfully created a bookmark": {
                    "description": "Successfully created a bookmark",
                    "value": {
                      "data": {

                      },
                      "status": "OK",
                      "type": "Bookmark"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "Permission denied"
          },
          "422": {
            "description": "Invalid Bookmark given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/bookmarks/{id}/versions": {
      "get": {
        "tags": [
          "/bookmarks"
        ],
        "summary": "getAllVersionsForBookmark",
        "description": "Retrieves a list of BookmarkVersionMetadata of the specified Bookmark.",
        "operationId": "getAllVersionsForBookmark",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved versions for a bookmark",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookmarkVersionMetadataListResponse"
                }
              }
            }
          },
          "403": {
            "description": "Permission denied"
          },
          "404": {
            "description": "Bookmark not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/dataModel": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getDataModel",
        "description": "Retrieves the model for a workspace",
        "operationId": "getDataModel",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "useCaseId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-LeanIX-UseCaseId",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelDefinitionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/models"
        ],
        "summary": "updateDataModel",
        "description": "Updates the data model for a workspace",
        "operationId": "updateDataModel",
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "description": "whether changes should be forced",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "the data model for the workspace",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/DataModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelUpdateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/dataModel/enriched": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getEnrichedDataModel",
        "description": "Retrieves the model for a workspace, including redundant data that makes life easy for the web front end",
        "operationId": "getEnrichedDataModel",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "useCaseId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-LeanIX-UseCaseId",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DataModelDefinitionResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/exports/fullExport": {
      "post": {
        "tags": [
          "/exports"
        ],
        "summary": "createFullExport",
        "description": "Creates a full export of the workspace data, or an export of the changelog, depending on given type",
        "operationId": "createFullExport",
        "parameters": [
          {
            "name": "exportType",
            "in": "query",
            "description": "The type of the export, must be either SNAPSHOT, AUDIT_LOG or AUDIT_LOG_LEGACY",
            "schema": {
              "type": "string",
              "enum": [
                "AUDIT_LOG",
                "SNAPSHOT",
                "INVENTORY_IMPORT",
                "INVENTORY_EXPORT",
                "WS_SYNC",
                "REPORT_SYNC",
                "AUDIT_LOG_LEGACY",
                "ARCHIVE"
              ]
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "The start date of the audit log export in ISO-8601 format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "The end date of the audit log export in ISO-8601 format. If left empty today is assumed",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/exports/downloads/{workspaceId}": {
      "get": {
        "tags": [
          "/exports"
        ],
        "description": "downloadExportFile",
        "operationId": "downloadExportFile",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "path",
            "description": "the ID of the workspace to retrieve the download for",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "key",
            "in": "query",
            "description": "a one time use key identifying the download to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/octet-stream": {

              },
              "application/json": {

              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/exports": {
      "get": {
        "tags": [
          "/exports"
        ],
        "summary": "getExports",
        "description": "Lists all exports of the given type in the workspace of the authorized user",
        "operationId": "getExports",
        "parameters": [
          {
            "name": "exportType",
            "in": "query",
            "description": "Comma separated list of types of exports to return, if left empty AUDIT_LOG and SNAPSHOT, and AUDIT_LOG_LEGACY exports are returned",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "Retrieve exports initiated by the given user",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of Exports to return, maximum is 100",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 40
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Marks the position of the first element that should be returned",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "description": "the field to sort the results by",
            "schema": {
              "type": "string",
              "default": "createdAt"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "the direction of the sorting",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/factSheets/{id}": {
      "get": {
        "tags": [
          "/factSheets"
        ],
        "summary": "getFactSheet",
        "description": "Retrieves a Fact Sheet",
        "operationId": "getFactSheet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationTypes",
            "in": "query",
            "description": "Comma separated list of relation types to show on the Fact Sheets",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "permissions",
            "in": "query",
            "description": "Show a permission field for the Fact Sheet",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactSheetResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "404": {
            "description": "Fact Sheet not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/factSheets"
        ],
        "summary": "updateFactSheet",
        "operationId": "updateFactSheet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "relationTypes",
            "in": "query",
            "description": "Comma separated list of relation types to update. If no types are set, the relations will not be changed.",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "requestBody": {
          "description": "Fact Sheet to update",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactSheet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactSheetResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to update Fact Sheet"
          },
          "404": {
            "description": "Invalid ID supplied"
          },
          "422": {
            "description": "Invalid Fact Sheet given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "/factSheets"
        ],
        "summary": "archiveFactSheet",
        "description": "Archives a Fact Sheet",
        "operationId": "archiveFactSheet",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Contains the comment and the Fact Sheet revision",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactSheetArchiveParameter"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Archival successful"
          },
          "404": {
            "description": "Invalid ID supplied"
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to delete Fact Sheet"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/factSheets": {
      "get": {
        "tags": [
          "/factSheets"
        ],
        "summary": "getFactSheets",
        "description": "Retrieves all Fact Sheets",
        "operationId": "getFactSheets",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Comma separated list of Fact Sheets types to list, leave empty for all",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relationTypes",
            "in": "query",
            "description": "Comma separated list of relation types to show on the Fact Sheets",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma separated list of fields to show on the Fact Sheets, leave empty for all",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "archivedOnly",
            "in": "query",
            "description": "Retrieve archived fact sheets instead of active ones",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of Fact Sheets to return, maximum is 5000",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 40
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Marks the position of the first element that should be returned",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "permissions",
            "in": "query",
            "description": "Show a permission field for the Fact Sheet",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "completion",
            "in": "query",
            "description": "Show completion status for the Fact Sheet",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "documents",
            "in": "query",
            "description": "Include documents of the Fact Sheet",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Include tags of the Fact Sheet",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "subscriptions",
            "in": "query",
            "description": "Include subscriptions of the Fact Sheet",
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "constrainingRelations",
            "in": "query",
            "description": "Include constraining relations of the relations of the Fact Sheet",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactSheetListResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "/factSheets"
        ],
        "summary": "createFactSheet",
        "description": "Creates a Fact Sheet",
        "operationId": "createFactSheet",
        "requestBody": {
          "description": "Fact Sheet to add",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactSheet"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Creation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactSheetResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to create Fact Sheet"
          },
          "422": {
            "description": "Invalid Fact Sheet given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/factSheets/{id}/relations": {
      "get": {
        "tags": [
          "/factSheets"
        ],
        "summary": "getFactSheetRelations",
        "description": "Retrieves all relations of a Fact Sheet, with the given type",
        "operationId": "getFactSheetRelations",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Only return relations of this type",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "withFactSheets",
            "in": "query",
            "description": "Include the to Fact Sheet in the relation",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationListResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "/factSheets"
        ],
        "summary": "createFactSheetRelation",
        "description": "Creates the given relation with the Fact Sheet as one side of the relation. When adding constraining relations only the ID of these relations will be used.",
        "operationId": "createFactSheetRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactSheetRelation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Creation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to create relation"
          },
          "422": {
            "description": "Invalid relation given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/factSheets/{id}/relations/{relationId}": {
      "put": {
        "tags": [
          "/factSheets"
        ],
        "summary": "updateFactSheetRelation",
        "description": "Updates the given relation.",
        "operationId": "updateFactSheetRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "relationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactSheetRelation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelationResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to update relation"
          },
          "404": {
            "description": "Invalid ID supplied"
          },
          "422": {
            "description": "Invalid relation given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "/factSheets"
        ],
        "summary": "deleteFactSheetRelation",
        "description": "Deletes the given relation.",
        "operationId": "deleteFactSheetRelation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "relationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletion successful"
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to delete relation"
          },
          "404": {
            "description": "Invalid ID supplied"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/factSheets/hierarchy/{rootId}": {
      "get": {
        "tags": [
          "/factSheets"
        ],
        "summary": "getFactSheetHierarchy",
        "description": "Retrieves a list of all Fact Sheets equal to or below a certain root Fact Sheet",
        "operationId": "getFactSheetHierarchy",
        "parameters": [
          {
            "name": "rootId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of Fact Sheets to return, maximum is 5000",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 40
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Marks the position of the first element that should be returned",
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactSheetListResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/features/{id}": {
      "get": {
        "tags": [
          "/features"
        ],
        "summary": "getFeature",
        "description": "Retrieves a feature for a workspace",
        "operationId": "getFeature",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponse"
                }
              }
            }
          },
          "404": {
            "description": "Feature not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "/features"
        ],
        "summary": "updateFeature",
        "description": "Change properties of a feature for a workspace (ADMIN role only)",
        "operationId": "upsertFeature",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "enabled",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureResponse"
                }
              }
            }
          },
          "403": {
            "description": "No permission to update feature"
          },
          "404": {
            "description": "Feature not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/features": {
      "get": {
        "tags": [
          "/features"
        ],
        "summary": "getFeatures",
        "description": "Retrieves features for current workspace",
        "operationId": "getFeatures",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureListResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/graphql": {
      "post": {
        "tags": [
          "/graphql"
        ],
        "summary": "processGraphQL",
        "description": "Processes GraphQL operations. If multiple operations are present they must be named; use operationName to select one for execution. For single operations, naming is optional. Query strings should be without line breaks. For more information visit our documentation: https://docs-eam.leanix.net/docs/graphql-basics#graphql-api\n",
        "operationId": "processGraphQL",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraphQLRequest"
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQLResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/graphql/upload": {
      "post": {
        "tags": [
          "/graphql"
        ],
        "summary": "processGraphQLMultipart",
        "description": "Processes GraphQL requests, supporting multipart documents",
        "operationId": "processGraphQLMultipart",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "graphQLRequest": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraphQLResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/accessControlEntities": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getAccessControlEntities",
        "description": "Retrieves all access control entities",
        "operationId": "getAccessControlEntities",
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of reports to be returned, maximum is 100",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 40
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "Marks the position of the first element that should be returned",
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "sorting",
            "in": "query",
            "description": "The field to sort the results by",
            "schema": {
              "type": "string",
              "default": "name"
            }
          },
          {
            "name": "sortDirection",
            "in": "query",
            "description": "The direction of the sorting",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ],
              "default": "ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List successfully loaded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlEntityListResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to get access control entities"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "/models"
        ],
        "summary": "createAccessControlEntity",
        "description": "Creates an access control entity",
        "operationId": "createAccessControlEntity",
        "requestBody": {
          "description": "New access control entity",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlEntity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Creation successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlEntityResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to add access control entity"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/accessControlEntities/{id}": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getAccessControlEntity",
        "description": "Reads an access control entity",
        "operationId": "readAccessControlEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Read successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlEntityResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to read access control entity"
          },
          "404": {
            "description": "No access control entity found with the ID supplied"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/models"
        ],
        "summary": "updateAccessControlEntity",
        "description": "Updates an access control entity",
        "operationId": "updateAccessControlEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessControlEntity"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Update successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessControlEntityResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to update access control entity"
          },
          "404": {
            "description": "No access control entity found with the ID supplied"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "/models"
        ],
        "summary": "deleteAccessControlEntity",
        "description": "Deletes an access control entity",
        "operationId": "deleteAccessControlEntity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletion successful"
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to delete access control entity"
          },
          "404": {
            "description": "No access control entity found with the ID supplied"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/authorization": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getAuthorization",
        "description": "Provides all authorization roles were for each role a set of permission is defined.",
        "operationId": "getAuthorization",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "useCaseId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-LeanIX-UseCaseId",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationRolesResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to get authorization"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/models"
        ],
        "summary": "updateAuthorization",
        "description": "Updates all authorization roles for a given workspace. This means all existing roles and its permissions will be overriden",
        "operationId": "updateAuthorization",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "The authorization configuration for the workspace which contains all roles and its permissions",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AuthorizationRole"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Update successful"
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to update authorization"
          },
          "422": {
            "description": "Invalid authorization definition given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/factSheetResources": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getFactSheetResourceModel",
        "description": "Retrieves the fact sheet resource model for a workspace",
        "operationId": "getFactSheetResourceModel",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactSheetResourceModelResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/models"
        ],
        "summary": "updateFactSheetResourceModel",
        "description": "Updates the fact sheet resource model for a workspace",
        "operationId": "updateFactSheetResourceModel",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "the fact sheet resource model for the workspace",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactSheetResourceModelDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Update successful"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/languages/{id}": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getLanguage",
        "description": "Get the given language",
        "operationId": "getLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageResponse"
                }
              }
            }
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to read language definition"
          },
          "404": {
            "description": "No permission to read language definition"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/models"
        ],
        "summary": "updateLanguage",
        "description": "Updates the given language",
        "operationId": "updateLanguage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Translation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Update successful"
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to update language definition"
          },
          "422": {
            "description": "Invalid language definition given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/reportingModel": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getReportingModel",
        "description": "Retrieves the report model for a workspace",
        "operationId": "getReportingModel",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingModelResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/models"
        ],
        "summary": "updateReportingModel",
        "description": "Updates the report model for a workspace",
        "operationId": "updateReportingModel",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "the report model for the workspace",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingModelDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Update successful"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/viewModel": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getViewModel",
        "description": "Retrieves the view model for a workspace",
        "operationId": "getViewModel",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "useCaseId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-LeanIX-UseCaseId",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ViewModelResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/models"
        ],
        "summary": "updateViewModel",
        "description": "Updates the view model for a workspace",
        "operationId": "updateViewModel",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "the view model for the workspace",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ViewModelDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Update successful"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/settings/factSheets/{factSheetType}": {
      "get": {
        "tags": [
          "/settings"
        ],
        "summary": "getFactSheetSettings",
        "operationId": "getModelCustomization",
        "parameters": [
          {
            "name": "factSheetType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactSheetSettingsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/settings"
        ],
        "summary": "putFactSheetSettings",
        "operationId": "updateModelsWithCustomization",
        "parameters": [
          {
            "name": "factSheetType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "customization",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FactSheetSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "ok"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "/settings"
        ],
        "summary": "getSettings",
        "operationId": "getSettings",
        "parameters": [
          {
            "name": "workspaceId",
            "in": "query",
            "description": "The workspace id to fetch settings for.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SettingsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "put": {
        "tags": [
          "/settings"
        ],
        "summary": "updateSettings",
        "operationId": "updateSettings",
        "requestBody": {
          "description": "the settings for the workspace",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkspaceSettings"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Update successful"
          },
          "401": {
            "description": "No authorization given"
          },
          "403": {
            "description": "No permission to update settings"
          },
          "422": {
            "description": "Invalid settings given"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/suggestions": {
      "get": {
        "tags": [
          "/suggestions"
        ],
        "summary": "getSuggestions",
        "description": "Retrieves a list of suggestions for a search term",
        "operationId": "getSuggestions",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "search term",
            "required": true,
            "schema": {
              "maxLength": 1000,
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "object",
            "in": "query",
            "description": "suggestions object type",
            "schema": {
              "type": "string",
              "default": "factSheet"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "number of suggestions, defaultValue is 50 if perType = false, 25 otherwise",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "perType",
            "in": "query",
            "description": "if suggestions are to be grouped per object type",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "useCaseId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-LeanIX-UseCaseId",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful suggestion retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuggestionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameter value"
          },
          "401": {
            "description": "No authorization provided"
          },
          "403": {
            "description": "No permission to retrieve suggestions"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/metaModel/actionBatches/{id}": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getMetaModelActionBatch",
        "description": "Return a single action batch",
        "operationId": "getActionBatch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id of the requested actionBatch",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaModelActionBatchResponse"
                }
              }
            }
          },
          "401": {
            "description": "Disabled Feature"
          },
          "403": {
            "description": "Missing privileges"
          },
          "404": {
            "description": "ActionBatch not found"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/metaModel/actionBatches": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getMetaModelActionBatches",
        "description": "Return existing action batches",
        "operationId": "getActionBatches",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The page number to access (1 indexed, defaults to 1)",
            "schema": {
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The page size requested (defaults to 20, max 100)",
            "schema": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaModelActionBatchListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Disabled Feature"
          },
          "403": {
            "description": "Missing privileges"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      },
      "post": {
        "tags": [
          "/models"
        ],
        "summary": "postMetaModelActionBatches",
        "description": "DEPRECATED: This endpoint provides an aggregated version of some of the other models available under /models. The MetaModel is only intended for internal use and will soon be removed from the public OpenAPI spec.",
        "operationId": "postActionBatches",
        "requestBody": {
          "description": "List of actions to be processed",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ActionBatchItem"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaModelActionBatchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Disabled Feature"
          },
          "403": {
            "description": "Missing privileges"
          },
          "422": {
            "description": "Implausible data"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/metaModel": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getMetaModel",
        "description": "DEPRECATED: This endpoint provides an aggregated version of some of the other models available under /models. The MetaModel is only intended for internal use and will soon be removed from the public OpenAPI spec.",
        "operationId": "getMetaModel",
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaModelResponse"
                }
              }
            }
          },
          "401": {
            "description": "Disabled Feature"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/metaModel/{factSheetType}": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getMetaModelForFactSheetType",
        "description": "DEPRECATED: This endpoint provides an aggregated version of some of the other models available under /models. The MetaModel is only intended for internal use and will soon be removed from the public OpenAPI spec.",
        "operationId": "getMetaModelForType",
        "parameters": [
          {
            "name": "factSheetType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetaModelResponse"
                }
              }
            }
          },
          "401": {
            "description": "Disabled Feature"
          },
          "403": {
            "description": "Missing privileges"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    },
    "/models/metaModel/{factSheetType}/deletionPreview": {
      "get": {
        "tags": [
          "/models"
        ],
        "summary": "getPreviewOfAffectedData",
        "description": "Provides a preview for affected data that will be deleted if corresponding FactSheet Type will be deleted.",
        "operationId": "getPreviewOfAffectedData",
        "parameters": [
          {
            "name": "factSheetType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FSTypeDeletionPreviewResponse"
                }
              }
            }
          },
          "401": {
            "description": "Disabled Feature"
          },
          "403": {
            "description": "Missing privileges"
          }
        },
        "security": [
          {
            "token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ApiError": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BookmarkShare": {
        "type": "object",
        "properties": {
          "sharedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "sharedUserInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SharedUserInfo"
            }
          }
        }
      },
      "BookmarkSharesData": {
        "type": "object",
        "properties": {
          "bookmarkId": {
            "type": "string",
            "format": "uuid"
          },
          "bookmarkShares": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookmarkShare"
            }
          }
        }
      },
      "BookmarkSharesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/BookmarkSharesData"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "SharedUserInfo": {
        "type": "object",
        "properties": {
          "sharedWithUser": {
            "$ref": "#/components/schemas/User"
          },
          "sharedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "technicalUser": {
            "type": "boolean"
          },
          "role": {
            "type": "string",
            "enum": [
              "SUPERADMIN",
              "SYSTEM",
              "APICLIENT",
              "ACCOUNTADMIN",
              "ACCOUNTUSER"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "ARCHIVED"
            ]
          }
        },
        "readOnly": true
      },
      "BookmarkShareInputData": {
        "required": [
          "bookmarkId",
          "sharedWithUserIds"
        ],
        "type": "object",
        "properties": {
          "bookmarkId": {
            "type": "string",
            "format": "uuid"
          },
          "sharedByUserId": {
            "type": "string",
            "format": "uuid"
          },
          "sharedWithUserIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "notifyUsers": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "Bookmark": {
        "required": [
          "lastUpdateUserId",
          "name",
          "permittedReadUserIds",
          "permittedWriteUserIds",
          "readonly",
          "referencedFactSheetIds",
          "type",
          "userId",
          "views"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "lastUpdateUserId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "INVENTORY",
              "REPORTING",
              "VISUALIZER",
              "DASHBOARD",
              "INVENTORY_EXPORT"
            ]
          },
          "groupKey": {
            "type": "string"
          },
          "workingCopy": {
            "$ref": "#/components/schemas/BookmarkWorkingCopy"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "i18nKey": {
            "type": "string"
          },
          "predefined": {
            "type": "boolean",
            "default": false
          },
          "readonly": {
            "type": "boolean",
            "default": false
          },
          "defaultSharingPriority": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "permittedReadUserIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "permittedWriteUserIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "referencedFactSheetIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "views": {
            "type": "integer",
            "format": "int64"
          },
          "replaySequence": {
            "type": "integer",
            "format": "int64"
          },
          "temporary": {
            "type": "boolean",
            "default": false
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "oDataEnabled": {
            "type": "boolean",
            "default": false
          },
          "state": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonNode"
            }
          }
        }
      },
      "BookmarkResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Bookmark"
          },
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "BookmarkWorkingCopy": {
        "required": [
          "state",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "bookmark": {
            "$ref": "#/components/schemas/Bookmark"
          },
          "state": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/JsonNode"
            }
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "JsonNode": {
        "type": "object"
      },
      "BookmarkVersionMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BookmarkVersionMetadataListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BookmarkVersionMetadata"
            }
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BookmarkListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Bookmark"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "AggregatedDataType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AggregationPath"
                }
              },
              "function": {
                "type": "string",
                "enum": [
                  "SUM",
                  "AVG",
                  "MIN",
                  "MAX",
                  "COUNT",
                  "ITC_CRITICAL_COUNT",
                  "ITC_ABS_COUNT",
                  "ITC_CRITICAL_RATIO"
                ]
              }
            }
          }
        ]
      },
      "AggregationPath": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          }
        }
      },
      "ApprovalWorkflowConfiguration": {
        "required": [
          "approvalStrategy",
          "enabled",
          "mandatoryBaseFields",
          "mandatorySubscriptionTypes",
          "rejectedState"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "approvalStrategy": {
            "type": "string",
            "readOnly": true,
            "enum": [
              "MANUAL",
              "AUTOMATIC"
            ]
          },
          "rejectedState": {
            "type": "boolean",
            "readOnly": true,
            "default": false
          },
          "mandatorySubscriptionTypes": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "readOnly": true,
              "enum": [
                "ACCOUNTABLE",
                "RESPONSIBLE",
                "OBSERVER"
              ]
            }
          },
          "mandatoryBaseFields": {
            "type": "array",
            "readOnly": true,
            "items": {
              "type": "string",
              "readOnly": true
            }
          }
        }
      },
      "ComponentConfig": {
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "relationField": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "fixed": {
            "type": "string"
          },
          "separator": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          },
          "postfix": {
            "type": "string"
          },
          "operation": {
            "type": "string",
            "enum": [
              "APPEND",
              "PREPEND"
            ]
          }
        }
      },
      "Config": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentConfig"
            }
          },
          "displayName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ComponentConfig"
            }
          }
        }
      },
      "ConfigTypeOnOffWithTime": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "unit": {
            "type": "string",
            "enum": [
              "NANOSECONDS",
              "MICROSECONDS",
              "MILLISECONDS",
              "SECONDS",
              "MINUTES",
              "HOURS",
              "DAYS"
            ]
          },
          "ignoreUpdatesForFields": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ignoreUpdatesForRelations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ignoreUpdatesForTags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CustomValidator": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "DataModel": {
        "type": "object",
        "properties": {
          "factSheets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FactSheetDefinition"
            }
          },
          "relations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RelationDefinition"
            }
          },
          "validators": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomValidator"
            }
          },
          "externalIdFields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ExternalIdFieldDefinition"
            }
          },
          "rules": {
            "$ref": "#/components/schemas/RulesDefinition"
          }
        }
      },
      "DataModelDefinitionResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "$ref": "#/components/schemas/DataModel"
          }
        }
      },
      "DataType": {
        "type": "object",
        "properties": {
          "mandatory": {
            "type": "boolean",
            "default": false
          },
          "quickSearch": {
            "type": "boolean",
            "default": false
          },
          "fullTextSearch": {
            "type": "boolean",
            "default": false
          },
          "type": {
            "type": "string"
          },
          "inFacet": {
            "type": "boolean",
            "default": false
          },
          "inView": {
            "type": "boolean",
            "default": false
          },
          "viewAggregation": {
            "type": "string",
            "enum": [
              "OFF",
              "MIN",
              "MAX",
              "AVG"
            ]
          },
          "activatedBy": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "initialValue": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "DoubleNumberDataType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "range": {
                "$ref": "#/components/schemas/DoubleNumberRange"
              }
            }
          }
        ]
      },
      "DoubleNumberRange": {
        "type": "object",
        "properties": {
          "min": {
            "type": "number",
            "format": "double"
          },
          "max": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ExternalIdFieldDefinition": {
        "type": "object",
        "properties": {
          "mandatory": {
            "type": "boolean",
            "writeOnly": true
          },
          "quickSearch": {
            "type": "boolean"
          },
          "fullTextSearch": {
            "type": "boolean"
          },
          "urlTemplate": {
            "type": "string"
          },
          "uniqueFactSheet": {
            "type": "boolean"
          },
          "autoIncrement": {
            "type": "boolean"
          },
          "autoIncrementPrefix": {
            "type": "string"
          },
          "autoIncrementMinLength": {
            "type": "integer",
            "format": "int32"
          },
          "readOnly": {
            "type": "boolean"
          },
          "forFactSheets": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "validators": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ExternalIdType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "urlTemplate": {
                "type": "string"
              },
              "uniqueFactSheet": {
                "type": "boolean"
              },
              "autoIncrement": {
                "type": "boolean"
              },
              "autoIncrementPrefix": {
                "type": "string"
              },
              "autoIncrementMinLength": {
                "type": "integer",
                "format": "int32"
              },
              "readOnly": {
                "type": "boolean"
              },
              "validators": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "FactSheetConfiguration": {
        "type": "object",
        "properties": {
          "qualitySeal": {
            "$ref": "#/components/schemas/ConfigTypeOnOffWithTime"
          },
          "approvalWorkflow": {
            "$ref": "#/components/schemas/ApprovalWorkflowConfiguration"
          },
          "maxHierarchyLevel": {
            "type": "integer",
            "format": "int32"
          },
          "defaultACL": {
            "type": "string",
            "enum": [
              "GLOBAL",
              "WRITE_RESTRICTED",
              "READ_RESTRICTED"
            ]
          },
          "impactManagement": {
            "$ref": "#/components/schemas/ImpactManagementDefinition"
          },
          "milestonesActive": {
            "type": "boolean"
          }
        }
      },
      "FactSheetDefinition": {
        "type": "object",
        "properties": {
          "relations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "config": {
            "$ref": "#/components/schemas/FactSheetConfiguration"
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DataType"
            }
          },
          "namingRule": {
            "$ref": "#/components/schemas/NamingRuleDefinition"
          }
        }
      },
      "FactSheetReferencesType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "targetFactSheetType": {
                "type": "string"
              },
              "identifyingField": {
                "type": "string"
              }
            }
          }
        ]
      },
      "FromAndToDefinition": {
        "type": "object",
        "properties": {
          "factSheetType": {
            "type": "string"
          },
          "multiplicity": {
            "type": "string",
            "enum": [
              "1",
              "*"
            ]
          },
          "activatedBy": {
            "type": "object",
            "additionalProperties": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string"
          },
          "mandatory": {
            "type": "boolean"
          },
          "groupByTargetField": {
            "type": "string"
          }
        }
      },
      "ImpactManagementDefinition": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "impactDisplayingSubtypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "impactDefiningSubtypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IntNumberDataType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "range": {
                "$ref": "#/components/schemas/IntNumberRange"
              }
            }
          }
        ]
      },
      "IntNumberRange": {
        "type": "object",
        "properties": {
          "min": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LifecycleType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "LocationType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          }
        ]
      },
      "MultipleSelectType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "NamingRuleDefinition": {
        "type": "object",
        "properties": {
          "regular": {
            "$ref": "#/components/schemas/Config"
          },
          "autogenerate": {
            "$ref": "#/components/schemas/Config"
          }
        }
      },
      "ProjectStatusType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "RegexValidator": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomValidator"
          }
        ]
      },
      "RelationDefinition": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/FromAndToDefinition"
          },
          "to": {
            "$ref": "#/components/schemas/FromAndToDefinition"
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/DataType"
            }
          },
          "constrainingRelations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TYPE_EQUAL",
                "CYCLES_ALLOWED",
                "FACT_SHEET_UNIQUE_LAX"
              ]
            }
          }
        }
      },
      "RulesDefinition": {
        "type": "object",
        "properties": {
          "defaultNamingRule": {
            "$ref": "#/components/schemas/NamingRuleDefinition"
          }
        }
      },
      "SearchBasedType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "searchParameterField": {
                "type": "string"
              },
              "filterTemplate": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SingleSelectType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "StringDataType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/DataType"
          },
          {
            "type": "object",
            "properties": {
              "validators": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "WebCallbackValidator": {
        "required": [
          "params"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/CustomValidator"
          },
          {
            "type": "object",
            "properties": {
              "params": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "DataModelUpdateResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Deletion"
            }
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Deletion": {
        "type": "object",
        "properties": {
          "deletionType": {
            "type": "string",
            "enum": [
              "FACT_SHEET",
              "RELATION",
              "FACT_SHEET_FIELD",
              "FACT_SHEET_FIELD_VALUE",
              "RELATION_FIELD",
              "RELATION_FIELD_VALUE"
            ]
          },
          "count": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "info1": {
            "type": "string"
          },
          "info2": {
            "type": "string"
          }
        }
      },
      "JobResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/JobResponseData"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "JobResponseData": {
        "type": "object",
        "properties": {
          "jobId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "synclogId": {
            "type": "string"
          }
        }
      },
      "Export": {
        "required": [
          "downloadFilename",
          "id",
          "localFilename",
          "status",
          "type",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "type": {
            "type": "string",
            "enum": [
              "AUDIT_LOG",
              "SNAPSHOT",
              "INVENTORY_IMPORT",
              "INVENTORY_EXPORT",
              "WS_SYNC",
              "REPORT_SYNC",
              "AUDIT_LOG_LEGACY",
              "ARCHIVE"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "STARTED",
              "COMPLETED",
              "DOWNLOADED",
              "ERROR",
              "DELETED",
              "CANCELED"
            ]
          },
          "localFilename": {
            "type": "string"
          },
          "downloadFilename": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deleteAt": {
            "type": "string",
            "format": "date-time"
          },
          "dryRun": {
            "type": "boolean"
          },
          "downloadKey": {
            "type": "string",
            "format": "uuid"
          },
          "factSheetTypes": {
            "type": "string"
          },
          "factSheetCount": {
            "type": "integer",
            "format": "int32"
          },
          "columnCount": {
            "type": "integer",
            "format": "int32"
          },
          "bookmark": {
            "$ref": "#/components/schemas/Bookmark"
          }
        }
      },
      "ExportListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Export"
            }
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "endCursor": {
            "type": "string"
          }
        }
      },
      "FactSheetArchiveParameter": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string"
          },
          "rev": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AccessControlEntityReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "readOnly": true
          }
        }
      },
      "BooleanValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "Comment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "factSheetId": {
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "CLOSED",
              "REOPENED"
            ]
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reply"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Completion": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "completion": {
            "type": "number",
            "format": "double"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ConcreteCompletion": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Completion"
          }
        ]
      },
      "DateValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string",
                "format": "date"
              }
            }
          }
        ]
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "origin": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "metadata": {
            "type": "string"
          },
          "refId": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "fileInformation": {
            "$ref": "#/components/schemas/FileInformation"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "displayName": {
            "type": "string"
          }
        }
      },
      "DoubleValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "number",
                "format": "double"
              }
            }
          }
        ]
      },
      "ExternalId": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "externalId": {
                "type": "string"
              },
              "comment": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "externalUrl": {
                "type": "string"
              },
              "externalVersion": {
                "type": "string"
              },
              "forceWrite": {
                "type": "boolean"
              }
            }
          }
        ]
      },
      "FactSheet": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldnameAndData"
            }
          },
          "relations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FactSheetRelation"
            }
          },
          "milestones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Milestone"
            }
          },
          "completion": {
            "$ref": "#/components/schemas/SectionCompletion"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "approvedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "ARCHIVED"
            ]
          },
          "lxState": {
            "type": "string",
            "enum": [
              "BROKEN_QUALITY_SEAL",
              "DRAFT",
              "REJECTED",
              "APPROVED"
            ]
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "qualitySealStatus": {
            "type": "string",
            "enum": [
              "DISABLED",
              "APPROVED",
              "BROKEN"
            ]
          },
          "permissions": {
            "$ref": "#/components/schemas/PermissionsField"
          },
          "score": {
            "type": "number",
            "format": "float"
          },
          "rev": {
            "type": "integer",
            "format": "int64"
          },
          "lxExcludeFromQuota": {
            "type": "boolean"
          },
          "naFields": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "subscriptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subscription"
            }
          },
          "permittedReadACL": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlEntityReference"
            }
          },
          "permittedWriteACL": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlEntityReference"
            }
          }
        }
      },
      "FactSheetReferencesFieldValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "FactSheetRelation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "displayNameToFS": {
            "type": "string"
          },
          "typeFromFS": {
            "type": "string"
          },
          "typeToFS": {
            "type": "string"
          },
          "permittedReadACL": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "activeFrom": {
            "type": "string",
            "format": "date"
          },
          "activeUntil": {
            "type": "string",
            "format": "date"
          },
          "constrainingRelations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FactSheetRelation"
            }
          },
          "idsOfConstrainingRelations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldnameAndData"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "ARCHIVED"
            ]
          },
          "fromId": {
            "type": "string",
            "format": "uuid"
          },
          "toId": {
            "type": "string",
            "format": "uuid"
          },
          "factSheet": {
            "$ref": "#/components/schemas/FactSheet"
          },
          "naFields": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string"
          }
        }
      },
      "FactSheetResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/FactSheet"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "FieldnameAndData": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/LxField"
          },
          "dataType": {
            "$ref": "#/components/schemas/DataType"
          }
        }
      },
      "FileInformation": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "mediaType": {
            "type": "string"
          }
        }
      },
      "IntegerValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "Lifecycle": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "phases": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Phase"
                }
              }
            }
          }
        ]
      },
      "LinkedSubscriptionRoleData": {
        "type": "object",
        "properties": {
          "roleId": {
            "type": "string",
            "format": "uuid"
          },
          "comment": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Location": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "placeId": {
                "type": "string"
              },
              "rawAddress": {
                "type": "string"
              },
              "latitude": {
                "type": "number",
                "format": "double"
              },
              "longitude": {
                "type": "number",
                "format": "double"
              },
              "geoCity": {
                "type": "string"
              },
              "geoCountryCode": {
                "type": "string"
              },
              "geoCountry": {
                "type": "string"
              },
              "geoAddress": {
                "type": "string"
              },
              "geoStreet": {
                "type": "string"
              },
              "geoHouseNumber": {
                "type": "string"
              },
              "geoPostalCode": {
                "type": "string"
              }
            }
          }
        ]
      },
      "LxField": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "StringValue",
              "BooleanValue",
              "IntegerValue",
              "DoubleValue",
              "DateValue",
              "SingleSelect",
              "Location",
              "MultipleSelect",
              "Lifecycle",
              "ProjectStatusProgress",
              "ExternalId",
              "FactSheetReferencesFieldValue",
              "SearchBasedFieldValue"
            ]
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "Milestone": {
        "required": [
          "date",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "MultipleSelect": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "values": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "PermissionsField": {
        "type": "object",
        "properties": {
          "self": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "READ",
                "UPDATE",
                "CREATE",
                "DELETE",
                "ARCHIVE",
                "IMPORT",
                "EXPORT",
                "INLINE_EDIT",
                "UNLOCK",
                "CHANGE_OWNER",
                "MANAGE_PREDEFINED",
                "MANAGE_CONTENT",
                "ADMINISTRATE",
                "DESIGN_SURVEY",
                "SAAS",
                "SAP_LANDSCAPE",
                "CHANGE_DEFAULT",
                "MANAGE_TEMPLATES",
                "UNRESTRICTED_READ",
                "UPLOAD_FILES",
                "ANALYSE_FILES",
                "ADD_TO_INBOX",
                "MANAGE_INBOX",
                "ANALYZE_RESULTS",
                "COLLECT_RESPONSES"
              ]
            }
          },
          "create": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "read": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "update": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "delete": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Phase": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "milestoneId": {
            "type": "string",
            "format": "uuid"
          },
          "phase": {
            "type": "string"
          }
        }
      },
      "ProjectStatus": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "projectStatusProviderInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectStatusProviderInfo"
            }
          }
        }
      },
      "ProjectStatusProgress": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "projectStatus": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProjectStatus"
                }
              }
            }
          }
        ]
      },
      "ProjectStatusProviderInfo": {
        "type": "object",
        "properties": {
          "providerId": {
            "type": "string",
            "format": "uuid"
          },
          "actualsOpEx": {
            "type": "integer",
            "format": "int32"
          },
          "actualsCapEx": {
            "type": "integer",
            "format": "int32"
          },
          "etcOpEx": {
            "type": "integer",
            "format": "int32"
          },
          "etcCapEx": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Reply": {
        "required": [
          "message"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SearchBasedFieldValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        ]
      },
      "SectionCompletion": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "completion": {
            "type": "number",
            "format": "double"
          },
          "percentage": {
            "type": "integer",
            "format": "int32"
          },
          "subCompletions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Completion"
            }
          }
        }
      },
      "SingleSelect": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "keyword": {
                "type": "string"
              }
            }
          }
        ]
      },
      "StringValue": {
        "required": [
          "type"
        ],
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/LxField"
          },
          {
            "type": "object",
            "properties": {
              "value": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "userId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "ACCOUNTABLE",
              "RESPONSIBLE",
              "OBSERVER"
            ]
          },
          "linkedRoles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedSubscriptionRoleData"
            }
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionRoleLegacy"
            }
          }
        }
      },
      "SubscriptionRoleLegacy": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "restrictToFactSheetTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "restrictToFactSheetType": {
            "type": "array",
            "writeOnly": true,
            "items": {
              "type": "string"
            }
          },
          "subscriptionType": {
            "type": "string",
            "enum": [
              "ACCOUNTABLE",
              "RESPONSIBLE",
              "OBSERVER"
            ]
          }
        }
      },
      "Tag": {
        "required": [
          "bgColor",
          "name",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tagGroup": {
            "$ref": "#/components/schemas/TagGroup"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "bgColor": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "ARCHIVED"
            ]
          },
          "replaySequence": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "TagGroup": {
        "required": [
          "mandatory",
          "mode",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "shortName": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "mandatory": {
            "type": "boolean"
          },
          "mode": {
            "type": "string",
            "enum": [
              "SINGLE",
              "MULTIPLE"
            ]
          },
          "restrictToFactSheetTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "mandatoryForFactSheetTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "replaySequence": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "RelationResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/FactSheetRelation"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "FactSheetListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FactSheet"
            }
          },
          "cursor": {
            "type": "string"
          }
        }
      },
      "RelationListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FactSheetRelation"
            }
          }
        }
      },
      "Feature": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "FUNCTIONAL",
              "QUOTA"
            ]
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DISABLED",
              "ENABLED"
            ]
          },
          "group": {
            "type": "string",
            "enum": [
              "BETA",
              "PRODUCTIVE",
              "LEGACY",
              "CUSTOMER",
              "EXCEPTION"
            ]
          },
          "quota": {
            "type": "integer",
            "format": "int32"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "customized": {
            "type": "boolean"
          }
        }
      },
      "FeatureResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/Feature"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "FeatureListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Feature"
            }
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GraphQLRequest": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "operationName": {
            "type": "string"
          }
        }
      },
      "GraphQLResult": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "AccessControlEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "displayName": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          },
          "description": {
            "maxLength": 2000,
            "minLength": 0,
            "type": "string"
          }
        }
      },
      "AccessControlEntityResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/AccessControlEntity"
          },
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "AccessControlEntityListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessControlEntity"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          },
          "endCursor": {
            "type": "string",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "AuthorizationRole": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "permissions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Permission"
            }
          }
        }
      },
      "AuthorizationRolesResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AuthorizationRole"
            }
          }
        }
      },
      "Instance": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Permission": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string"
          },
          "function": {
            "type": "string"
          },
          "actions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "instances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Instance"
            }
          }
        }
      },
      "FactSheetResourceModelDefinition": {
        "type": "object",
        "properties": {
          "resourceTypes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ResourceTypeSection"
            }
          }
        }
      },
      "FactSheetResourceModelResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "$ref": "#/components/schemas/FactSheetResourceModelDefinition"
          }
        }
      },
      "ResourceTypeSection": {
        "type": "object",
        "properties": {
          "icon": {
            "type": "string"
          }
        }
      },
      "LanguageResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "ReportConfiguration": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "config": {
            "type": "object"
          }
        }
      },
      "ReportLxStateConfiguration": {
        "required": [
          "keys"
        ],
        "type": "object",
        "properties": {
          "forFactSheetType": {
            "type": "string"
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "BROKEN_QUALITY_SEAL",
                "DRAFT",
                "REJECTED",
                "APPROVED"
              ]
            }
          }
        }
      },
      "ReportMenuEntry": {
        "required": [
          "report"
        ],
        "type": "object",
        "properties": {
          "report": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "predefinedReportDescription": {
            "type": "string"
          },
          "predefinedReportName": {
            "type": "string"
          },
          "defaultSharingPriority": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ReportMenuSection": {
        "required": [
          "entries"
        ],
        "type": "object",
        "properties": {
          "icon": {
            "type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportMenuEntry"
            }
          }
        }
      },
      "ReportingModelDefinition": {
        "type": "object",
        "properties": {
          "menu": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ReportMenuSection"
            }
          },
          "reports": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ReportConfiguration"
            }
          },
          "lxStateFilter": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportLxStateConfiguration"
            }
          }
        }
      },
      "ReportingModelResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "$ref": "#/components/schemas/ReportingModelDefinition"
          }
        }
      },
      "FacetViewState": {
        "required": [
          "facetKey"
        ],
        "type": "object",
        "properties": {
          "facetKey": {
            "type": "string"
          },
          "open": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean"
          }
        }
      },
      "FactSheetViewModel": {
        "required": [
          "facetViewStates",
          "onTheFlyCreation",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "bgColor": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "onTheFlyCreation": {
            "type": "boolean"
          },
          "hiddenForRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fieldMetaData": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "facetViewStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacetViewState"
            }
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Section"
            }
          },
          "hoverConfig": {
            "$ref": "#/components/schemas/HoverConfig"
          },
          "factSheetTabRestriction": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "Field": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "FieldLayout": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "readonly": {
            "type": "boolean"
          },
          "profile": {
            "type": "string"
          },
          "weight": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "HoverConfig": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          }
        }
      },
      "Layout": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldLayout"
            }
          }
        }
      },
      "NavigationModel": {
        "type": "object",
        "properties": {
          "permittedRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RelationGroupedBy": {
        "type": "object",
        "properties": {
          "factSheetType": {
            "type": "string"
          },
          "enablingRelation": {
            "type": "string"
          },
          "groupingRelation": {
            "type": "string"
          }
        }
      },
      "Section": {
        "required": [
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "subsections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Subsection"
            }
          },
          "tabs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "weight": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Subsection": {
        "required": [
          "label",
          "template"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "helpText": {
            "type": "string"
          },
          "template": {
            "type": "string"
          },
          "templateOptions": {
            "$ref": "#/components/schemas/TemplateOptions"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "disabled": {
            "type": "boolean"
          }
        }
      },
      "TemplateOptions": {
        "type": "object",
        "properties": {
          "relationName": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "layout": {
            "$ref": "#/components/schemas/Layout"
          },
          "relationGroupedBy": {
            "$ref": "#/components/schemas/RelationGroupedBy"
          },
          "webcomponentLayout": {
            "$ref": "#/components/schemas/WebcomponentLayout"
          }
        }
      },
      "ViewModelDefinition": {
        "type": "object",
        "properties": {
          "factSheets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FactSheetViewModel"
            }
          },
          "navigation": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/NavigationModel"
            }
          }
        }
      },
      "ViewModelResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "$ref": "#/components/schemas/ViewModelDefinition"
          }
        }
      },
      "WebcomponentLayout": {
        "type": "object",
        "properties": {
          "frontendName": {
            "type": "string"
          },
          "webcomponentName": {
            "type": "string"
          }
        }
      },
      "AuthorizationModelTranslation": {
        "type": "object",
        "properties": {
          "permissionRoles": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PermissionItemTranslation"
            }
          },
          "permissionDomains": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PermissionDomainTranslation"
            }
          }
        }
      },
      "CustomDataPrivacyTranslation": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "CustomTranslation": {
        "type": "object",
        "properties": {
          "welcomeMessage": {
            "type": "string"
          },
          "help": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "dataPrivacy": {
            "$ref": "#/components/schemas/CustomDataPrivacyTranslation"
          }
        }
      },
      "DashboardModelTranslation": {
        "type": "object",
        "properties": {
          "shortcuts": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "panels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "DataModelTranslation": {
        "type": "object",
        "properties": {
          "externalIdFields": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "factSheets": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/FactSheetTranslation"
            }
          },
          "relations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/RelationTranslation"
            }
          },
          "baseModel": {
            "$ref": "#/components/schemas/FactSheetTranslation"
          }
        }
      },
      "FactSheetLabelTranslation": {
        "type": "object",
        "properties": {
          "plural": {
            "type": "string"
          },
          "singular": {
            "type": "string"
          }
        }
      },
      "FactSheetResourceModelTranslation": {
        "type": "object",
        "properties": {
          "resourceTypes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ResourceTypeTranslation"
            }
          }
        }
      },
      "FactSheetTranslation": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "label": {
            "$ref": "#/components/schemas/FactSheetLabelTranslation"
          },
          "helpText": {
            "type": "string"
          }
        }
      },
      "HelpTextAndLabelTranslation": {
        "type": "object",
        "properties": {
          "helpText": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "MetaItemTranslation": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "number": {
            "$ref": "#/components/schemas/MetaItemTranslationNumber"
          },
          "helpText": {
            "type": "string"
          }
        }
      },
      "MetaItemTranslationNumber": {
        "type": "object",
        "properties": {
          "singular": {
            "type": "string"
          },
          "plural": {
            "type": "string"
          }
        }
      },
      "PermissionDomainTranslation": {
        "type": "object",
        "properties": {
          "displayName": {
            "$ref": "#/components/schemas/MetaItemTranslation"
          },
          "permissibleActions": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/PermissionItemTranslation"
            }
          }
        }
      },
      "PermissionItemTranslation": {
        "type": "object",
        "properties": {
          "displayName": {
            "$ref": "#/components/schemas/MetaItemTranslation"
          }
        }
      },
      "RelationBaseFieldsTranslation": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "activeFrom": {
            "type": "string"
          },
          "activeUntil": {
            "type": "string"
          },
          "activeBetween": {
            "type": "string"
          }
        }
      },
      "RelationTranslation": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ReportingModelTranslation": {
        "type": "object",
        "properties": {
          "menu": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "reports": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ResourceTypeTranslation": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          }
        }
      },
      "StaticContentModelTranslation": {
        "type": "object",
        "properties": {
          "subscriptions": {
            "$ref": "#/components/schemas/SubscriptionTranslation"
          },
          "relationBaseFields": {
            "$ref": "#/components/schemas/RelationBaseFieldsTranslation"
          }
        }
      },
      "SubscriptionTranslation": {
        "type": "object",
        "properties": {
          "all": {
            "type": "string"
          },
          "accountable": {
            "type": "string"
          },
          "observer": {
            "type": "string"
          },
          "responsible": {
            "type": "string"
          }
        }
      },
      "Translation": {
        "type": "object",
        "properties": {
          "dataModel": {
            "$ref": "#/components/schemas/DataModelTranslation"
          },
          "viewModel": {
            "$ref": "#/components/schemas/ViewModelTranslation"
          },
          "reportingModel": {
            "$ref": "#/components/schemas/ReportingModelTranslation"
          },
          "dashboardModel": {
            "$ref": "#/components/schemas/DashboardModelTranslation"
          },
          "factSheetResourceModel": {
            "$ref": "#/components/schemas/FactSheetResourceModelTranslation"
          },
          "custom": {
            "$ref": "#/components/schemas/CustomTranslation"
          },
          "authorizationModel": {
            "$ref": "#/components/schemas/AuthorizationModelTranslation"
          },
          "staticContentModel": {
            "$ref": "#/components/schemas/StaticContentModelTranslation"
          }
        }
      },
      "ViewModelTranslation": {
        "type": "object",
        "properties": {
          "section": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "subsection": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/HelpTextAndLabelTranslation"
            }
          }
        }
      },
      "CustomizationConfig": {
        "type": "object",
        "properties": {
          "maxHierarchyLevel": {
            "type": "integer",
            "format": "int32"
          },
          "qualitySeal": {
            "$ref": "#/components/schemas/CustomizationQualitySeal"
          },
          "defaultACL": {
            "type": "string",
            "enum": [
              "GLOBAL",
              "WRITE_RESTRICTED",
              "READ_RESTRICTED"
            ]
          }
        }
      },
      "CustomizationLocalisedLabel": {
        "type": "object",
        "properties": {
          "singular": {
            "type": "string"
          },
          "plural": {
            "type": "string"
          }
        }
      },
      "CustomizationQualitySeal": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "value": {
            "type": "integer",
            "format": "int64"
          },
          "unit": {
            "type": "string",
            "enum": [
              "NANOSECONDS",
              "MICROSECONDS",
              "MILLISECONDS",
              "SECONDS",
              "MINUTES",
              "HOURS",
              "DAYS"
            ]
          },
          "ignoreUpdatesForFields": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ignoreUpdatesForRelations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ignoreUpdatesForTags": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CustomizationSection": {
        "type": "object",
        "properties": {
          "subsections": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomizationSubsection"
            }
          }
        }
      },
      "CustomizationSubsection": {
        "type": "object",
        "properties": {
          "weight": {
            "type": "number",
            "format": "double"
          },
          "disabled": {
            "type": "boolean"
          }
        }
      },
      "FactSheetSettings": {
        "required": [
          "bgColor",
          "config"
        ],
        "type": "object",
        "properties": {
          "bgColor": {
            "type": "string"
          },
          "onTheFlyCreation": {
            "type": "boolean"
          },
          "config": {
            "$ref": "#/components/schemas/CustomizationConfig"
          },
          "sections": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomizationSection"
            }
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/CustomizationLocalisedLabel"
            }
          }
        }
      },
      "FactSheetSettingsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "$ref": "#/components/schemas/FactSheetSettings"
          }
        }
      },
      "Chart": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "chartProduct": {
            "type": "string"
          },
          "config": {
            "$ref": "#/components/schemas/ChartConfig"
          },
          "forReporting": {
            "type": "boolean"
          },
          "isStacked": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "ChartConfig": {
        "type": "object",
        "properties": {
          "timespan": {
            "type": "string"
          },
          "titleYAxis": {
            "type": "string"
          },
          "chartType": {
            "type": "string"
          },
          "defaultAggregation": {
            "type": "string"
          },
          "aggregationTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "missingDataConfiguration": {
            "type": "string"
          }
        }
      },
      "ChartSetting": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "chart": {
            "$ref": "#/components/schemas/Chart"
          },
          "series": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Series"
            }
          }
        }
      },
      "DashboardSettings": {
        "required": [
          "allowedIframePanelAttributes",
          "allowedIframePanelUrls"
        ],
        "type": "object",
        "properties": {
          "allowedIframePanelUrls": {
            "type": "string"
          },
          "defaultDashboard": {
            "type": "string"
          },
          "userDefaultDashboardEnabled": {
            "type": "boolean"
          },
          "allowAllUrlsInIframePanel": {
            "type": "boolean"
          },
          "allowedIframePanelAttributes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Design": {
        "required": [
          "activeMode"
        ],
        "type": "object",
        "properties": {
          "activeMode": {
            "type": "string",
            "enum": [
              "CUSTOM",
              "CLASSIC",
              "EAS"
            ]
          },
          "customCss": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "HelpSettings": {
        "required": [
          "helpCenter",
          "userGuide"
        ],
        "type": "object",
        "properties": {
          "helpCenter": {
            "type": "string"
          },
          "userGuide": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "supportUrl": {
            "type": "string"
          },
          "showHelpTours": {
            "type": "boolean"
          }
        }
      },
      "IntegrationsSettings": {
        "type": "object",
        "properties": {
          "technopedia": {
            "$ref": "#/components/schemas/UserNameAndPasswordIntegrationSettings"
          },
          "signavio": {
            "$ref": "#/components/schemas/SignavioSettings"
          },
          "intercom": {
            "$ref": "#/components/schemas/IntercomSettings"
          }
        }
      },
      "IntercomSettings": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "appId": {
            "type": "string"
          },
          "identitySecret": {
            "type": "string"
          }
        }
      },
      "Metrics": {
        "type": "object",
        "properties": {
          "charts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChartSetting"
            }
          }
        }
      },
      "OotbDashboardSettings": {
        "type": "object",
        "properties": {
          "applicationPortfolioManagement": {
            "type": "boolean"
          },
          "applicationRationalization": {
            "type": "boolean"
          },
          "obsolescenceRisk": {
            "type": "boolean"
          }
        }
      },
      "RetentionSettings": {
        "type": "object",
        "properties": {
          "eventUserRetentionDays": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Rule": {
        "type": "object",
        "properties": {
          "tagName": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          },
          "target": {
            "type": "string"
          }
        }
      },
      "Series": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "measurement": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "tagsRule": {
            "$ref": "#/components/schemas/TagsRule"
          },
          "aggregationFunction": {
            "type": "string"
          },
          "grouping": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "unit": {
            "type": "string"
          },
          "inventoryLink": {
            "type": "object"
          }
        }
      },
      "SettingsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "$ref": "#/components/schemas/WorkspaceSettings"
          }
        }
      },
      "SignavioGlossaryCategoryMapping": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "strict": {
            "type": "boolean"
          },
          "glossaryCategoryId": {
            "type": "string"
          },
          "leanixRelationName": {
            "type": "string"
          },
          "master": {
            "type": "string",
            "enum": [
              "LEANIX",
              "SIGNAVIO"
            ]
          }
        }
      },
      "SignavioProcessMapping": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "strict": {
            "type": "boolean"
          },
          "directoryIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "factSheetType": {
            "type": "string"
          },
          "linkProcessingMode": {
            "type": "string",
            "enum": [
              "NO_PROCESSING",
              "PARENT_CHILD"
            ]
          },
          "publishedOnly": {
            "type": "boolean"
          }
        }
      },
      "SignavioSettings": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "signavioUrl": {
            "type": "string"
          },
          "tenantId": {
            "type": "string"
          },
          "loginParams": {
            "type": "string"
          },
          "processMapping": {
            "$ref": "#/components/schemas/SignavioProcessMapping"
          },
          "glossaryCategoryMappings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/SignavioGlossaryCategoryMapping"
            }
          }
        }
      },
      "SnapshotSettings": {
        "type": "object",
        "properties": {
          "allowOverwrite": {
            "type": "boolean"
          }
        }
      },
      "SubscriptionSettings": {
        "required": [
          "roleAssignment",
          "roleMode",
          "subscriptionTypes"
        ],
        "type": "object",
        "properties": {
          "subscriptionTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ACCOUNTABLE",
                "RESPONSIBLE",
                "OBSERVER"
              ]
            }
          },
          "roleAssignment": {
            "type": "string",
            "enum": [
              "SINGLE",
              "MULTIPLE"
            ]
          },
          "roleMode": {
            "type": "string",
            "enum": [
              "ON_THE_FLY",
              "OPTIONAL",
              "REQUIRED"
            ]
          }
        }
      },
      "TagSettings": {
        "type": "object",
        "properties": {
          "taggingMode": {
            "type": "string",
            "enum": [
              "ON_THE_FLY",
              "PRE_DEFINED_ONLY",
              "PRE_DEFINED_OR_ON_THE_FLY"
            ]
          }
        }
      },
      "TagsRule": {
        "type": "object",
        "properties": {
          "operator": {
            "type": "string"
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Rule"
            }
          }
        }
      },
      "UserNameAndPasswordIntegrationSettings": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "userName": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "WorkspaceSettings": {
        "required": [
          "completionScore",
          "currency",
          "dataPrivacy",
          "design",
          "help",
          "idleTimeoutMinutes",
          "language",
          "quickSearchMode",
          "snapshot",
          "subscriptions",
          "tags"
        ],
        "type": "object",
        "properties": {
          "tagsSettings": {
            "$ref": "#/components/schemas/TagSettings"
          },
          "subscriptions": {
            "$ref": "#/components/schemas/SubscriptionSettings"
          },
          "tags": {
            "$ref": "#/components/schemas/TagSettings"
          },
          "help": {
            "$ref": "#/components/schemas/HelpSettings"
          },
          "snapshot": {
            "$ref": "#/components/schemas/SnapshotSettings"
          },
          "integrations": {
            "$ref": "#/components/schemas/IntegrationsSettings"
          },
          "currency": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "jsSnippet": {
            "type": "string"
          },
          "idleTimeoutMinutes": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "defaultReportId": {
            "type": "string"
          },
          "dataPrivacy": {
            "type": "string",
            "enum": [
              "NORMAL",
              "RELAXED"
            ]
          },
          "completionScore": {
            "type": "string",
            "enum": [
              "ENABLED",
              "DISABLED"
            ]
          },
          "quickSearchMode": {
            "type": "string",
            "enum": [
              "LIST_VIEW",
              "GROUPED_VIEW"
            ]
          },
          "design": {
            "$ref": "#/components/schemas/Design"
          },
          "metrics": {
            "$ref": "#/components/schemas/Metrics"
          },
          "ootbDashboards": {
            "$ref": "#/components/schemas/OotbDashboardSettings"
          },
          "smartIndicatorsEnabled": {
            "type": "boolean"
          },
          "retention": {
            "$ref": "#/components/schemas/RetentionSettings"
          },
          "dashboard": {
            "$ref": "#/components/schemas/DashboardSettings"
          },
          "defaultUseCases": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "uuid"
            }
          }
        }
      },
      "Position": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "length": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Reason": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Position"
            }
          }
        }
      },
      "Suggestion": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "format": "uuid"
          },
          "displayName": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "reasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reason"
            }
          }
        }
      },
      "SuggestionsDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "suggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Suggestion"
            }
          }
        }
      },
      "SuggestionsResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SuggestionsDTO"
            }
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MetaModelActionBatchData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "actorId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "DONE",
              "ERROR"
            ]
          },
          "errors": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaModelActionData"
            }
          }
        }
      },
      "MetaModelActionBatchResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "$ref": "#/components/schemas/MetaModelActionBatchData"
          }
        }
      },
      "MetaModelActionData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "CREATE_ITEM",
              "CONDITION",
              "UPDATE_DATA",
              "UPDATE_VIEW",
              "UPDATE_TRANSLATION",
              "MOVE_ITEM",
              "DELETE_ITEM",
              "RENAME_ITEM",
              "PERMISSION",
              "PERMISSION_ROLE",
              "CUSTOM_PERMISSION",
              "FACT_SHEET_TYPE",
              "FACT_SHEET_FIELD",
              "FACT_SHEET_FIELD_VALUE",
              "SECTION",
              "SUBSECTION",
              "RELATION",
              "RELATION_FIELD",
              "RELATION_FIELD_VALUE",
              "EXTERNAL_ID",
              "EXTERNAL_ID_FIELD",
              "FIELD_VALUE",
              "NOT_SUPPORTED_ANYMORE"
            ]
          },
          "node": {
            "type": "object"
          },
          "payload": {
            "type": "object"
          },
          "oldValue": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "VALID",
              "INVALID",
              "DONE",
              "SKIPPED"
            ]
          },
          "error": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "subtype": {
            "type": "string",
            "enum": [
              "FACT_SHEET_TYPE",
              "SECTION",
              "SUBSECTION",
              "RELATION",
              "FIELD_FACT_SHEET",
              "FIELD_EXTERNAL_ID",
              "FIELD_RELATION",
              "FIELD_VALUE",
              "PERMISSION",
              "TRANSLATE",
              "CREATE",
              "UPDATE",
              "DELETE",
              "MOVE",
              "RENAME",
              "UPDATE_DATA",
              "UPDATE_VIEW",
              "NOT_SUPPORTED_ANYMORE"
            ]
          }
        }
      },
      "MetaModelActionBatchListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaModelActionBatchData"
            }
          }
        }
      },
      "MetaFacetViewState": {
        "type": "object",
        "properties": {
          "facetKey": {
            "type": "string"
          },
          "open": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean"
          }
        }
      },
      "MetaFactSheetType": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "factSheetTypeConfig": {
            "$ref": "#/components/schemas/MetaFactSheetTypeConfig"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MetaItemTranslation"
            }
          },
          "sections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaSection"
            }
          }
        }
      },
      "MetaFactSheetTypeConfig": {
        "type": "object",
        "properties": {
          "maxHierarchyLevel": {
            "type": "integer",
            "format": "int32"
          },
          "color": {
            "type": "string"
          },
          "bgColor": {
            "type": "string"
          },
          "facetViewStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaFacetViewState"
            }
          },
          "qualitySeal": {
            "$ref": "#/components/schemas/QualitySealConfig"
          },
          "approvalWorkflow": {
            "$ref": "#/components/schemas/ApprovalWorkflowConfiguration"
          },
          "onTheFlyCreation": {
            "type": "boolean"
          },
          "hiddenForRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultACL": {
            "type": "string",
            "enum": [
              "GLOBAL",
              "WRITE_RESTRICTED",
              "READ_RESTRICTED"
            ]
          }
        }
      },
      "MetaField": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaFieldValue"
            }
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MetaItemTranslation"
            }
          },
          "visible": {
            "type": "boolean"
          },
          "quickSearch": {
            "type": "boolean"
          },
          "fullTextSearch": {
            "type": "boolean"
          },
          "inFacet": {
            "type": "boolean"
          },
          "inView": {
            "type": "boolean"
          },
          "renderType": {
            "type": "string"
          },
          "readOnly": {
            "type": "boolean"
          },
          "mandatory": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "MetaFieldValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MetaItemTranslation"
            }
          },
          "color": {
            "type": "string"
          }
        }
      },
      "MetaModel": {
        "type": "object",
        "properties": {
          "modelInfo": {
            "$ref": "#/components/schemas/MetaModelInfo"
          },
          "factSheetTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaFactSheetType"
            }
          }
        }
      },
      "MetaModelInfo": {
        "type": "object",
        "properties": {
          "workspaceId": {
            "type": "string",
            "format": "uuid"
          },
          "revision": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MetaModelResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          },
          "total": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "$ref": "#/components/schemas/MetaModel"
          }
        }
      },
      "MetaRelationDefinition": {
        "type": "object",
        "properties": {
          "externalName": {
            "type": "string"
          },
          "factSheetType": {
            "type": "string"
          },
          "multiplicity": {
            "type": "string",
            "enum": [
              "1",
              "*"
            ]
          },
          "mandatory": {
            "type": "boolean"
          },
          "groupByTargetField": {
            "type": "string"
          }
        }
      },
      "MetaSection": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "subsections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaSubsection"
            }
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MetaItemTranslation"
            }
          },
          "visible": {
            "type": "boolean"
          }
        }
      },
      "MetaSubsection": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "visible": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "FIELD",
              "RELATION",
              "RELATION_DIAGRAM",
              "PROJECT_STATUS",
              "PROPERTIES",
              "FS_REFERENCES",
              "WEBCOMPONENT",
              "MILESTONES"
            ]
          },
          "translations": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MetaItemTranslation"
            }
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetaField"
            }
          },
          "from": {
            "$ref": "#/components/schemas/MetaRelationDefinition"
          },
          "to": {
            "$ref": "#/components/schemas/MetaRelationDefinition"
          },
          "name": {
            "type": "string"
          },
          "direction": {
            "type": "string",
            "enum": [
              "FORWARD",
              "REVERSE"
            ]
          },
          "referencedInNamingRule": {
            "type": "boolean"
          },
          "referencedInConstrainingRelations": {
            "type": "boolean"
          }
        }
      },
      "QualitySealConfig": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "breakAfterDays": {
            "minimum": 1,
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "FSTypeDeletionPreview": {
        "type": "object",
        "properties": {
          "fsType": {
            "type": "string"
          },
          "factSheetDeletionCount": {
            "type": "integer",
            "format": "int32"
          },
          "affectedRelations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelationToDelete"
            }
          },
          "affectedByNamingRuleFSType": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FSTypeDeletionPreviewResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "type": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/FSTypeDeletionPreview"
          },
          "errorMessage": {
            "type": "string"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiError"
            }
          }
        }
      },
      "RelationToDelete": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "constraints": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "TYPE_EQUAL",
                "CYCLES_ALLOWED",
                "FACT_SHEET_UNIQUE_LAX"
              ]
            }
          },
          "constrainingRelations": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ActionBatchItem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "CREATE_ITEM",
              "CONDITION",
              "UPDATE_DATA",
              "UPDATE_VIEW",
              "UPDATE_TRANSLATION",
              "MOVE_ITEM",
              "DELETE_ITEM",
              "RENAME_ITEM",
              "PERMISSION",
              "PERMISSION_ROLE",
              "CUSTOM_PERMISSION",
              "FACT_SHEET_TYPE",
              "FACT_SHEET_FIELD",
              "FACT_SHEET_FIELD_VALUE",
              "SECTION",
              "SUBSECTION",
              "RELATION",
              "RELATION_FIELD",
              "RELATION_FIELD_VALUE",
              "EXTERNAL_ID",
              "EXTERNAL_ID_FIELD",
              "FIELD_VALUE",
              "NOT_SUPPORTED_ANYMORE"
            ]
          },
          "subtype": {
            "type": "string",
            "enum": [
              "FACT_SHEET_TYPE",
              "SECTION",
              "SUBSECTION",
              "RELATION",
              "FIELD_FACT_SHEET",
              "FIELD_EXTERNAL_ID",
              "FIELD_RELATION",
              "FIELD_VALUE",
              "PERMISSION",
              "TRANSLATE",
              "CREATE",
              "UPDATE",
              "DELETE",
              "MOVE",
              "RENAME",
              "UPDATE_DATA",
              "UPDATE_VIEW",
              "NOT_SUPPORTED_ANYMORE"
            ]
          },
          "node": {
            "type": "string"
          }
        },
        "discriminator": {
          "propertyName": "type"
        }
      },
      "ConditionUpdateActionInput": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "node": {
                "$ref": "#/components/schemas/StructuredNode"
              },
              "payload": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          }
        ]
      },
      "CreateItemActionInput": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "node": {
                "$ref": "#/components/schemas/StructuredNode"
              },
              "payload": {
                "$ref": "#/components/schemas/CreateItemActionPayload"
              }
            }
          }
        ]
      },
      "CreateItemActionPayload": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          }
        }
      },
      "DeleteItemActionInput": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "node": {
                "$ref": "#/components/schemas/StructuredNode"
              },
              "payload": {
                "type": "object"
              }
            }
          }
        ]
      },
      "ExternalIdActionBatchItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "payload": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              },
              "fieldName": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Icon": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "reverse": {
            "type": "boolean"
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "MetaData": {
        "type": "object",
        "properties": {
          "icon": {
            "$ref": "#/components/schemas/Icon"
          },
          "color": {
            "type": "string"
          },
          "legend": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "min": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "max": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "unit": {
            "type": "string"
          },
          "values": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "MoveItemActionInput": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "node": {
                "$ref": "#/components/schemas/StructuredNode"
              },
              "payload": {
                "$ref": "#/components/schemas/MoveItemActionPayload"
              }
            }
          }
        ]
      },
      "MoveItemActionPayload": {
        "type": "object",
        "properties": {
          "index": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PermissionActionBatchItem": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "role": {
                "type": "string"
              },
              "payload": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          }
        ]
      },
      "RenameItemActionInput": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "node": {
                "$ref": "#/components/schemas/StructuredNode"
              },
              "payload": {
                "$ref": "#/components/schemas/RenameItemFieldActionPayload"
              }
            }
          }
        ]
      },
      "RenameItemFieldActionPayload": {
        "required": [
          "newValue"
        ],
        "type": "object",
        "properties": {
          "newValue": {
            "type": "string"
          }
        }
      },
      "SingularPluralLabel": {
        "type": "object",
        "properties": {
          "singular": {
            "type": "string"
          },
          "plural": {
            "type": "string"
          }
        }
      },
      "StructuredNode": {
        "type": "object",
        "properties": {
          "inputNode": {
            "type": "string"
          },
          "nodeType": {
            "type": "string",
            "enum": [
              "FACT_SHEET_TYPE_NODE",
              "SECTION_NODE",
              "SUBSECTION_NODE",
              "FIELD_NODE",
              "FIELD_VALUE_NODE",
              "RELATION_NODE"
            ]
          },
          "factSheetType": {
            "type": "string"
          },
          "section": {
            "type": "string"
          },
          "subsection": {
            "type": "string"
          },
          "field": {
            "type": "string"
          },
          "fieldValue": {
            "type": "string"
          },
          "relationName": {
            "type": "string"
          },
          "effectiveRelation": {
            "type": "string"
          }
        }
      },
      "UpdateDataActionInput": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "node": {
                "$ref": "#/components/schemas/StructuredNode"
              },
              "payload": {
                "$ref": "#/components/schemas/UpdateDataActionPayload"
              }
            }
          }
        ]
      },
      "UpdateDataActionPayload": {
        "type": "object",
        "properties": {
          "quickSearch": {
            "type": "boolean"
          },
          "fullTextSearch": {
            "type": "boolean"
          },
          "inFacet": {
            "type": "boolean"
          },
          "inView": {
            "type": "boolean"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxHierarchyLevel": {
            "type": "integer",
            "format": "int32"
          },
          "qualitySeal": {
            "$ref": "#/components/schemas/QualitySealConfig"
          },
          "defaultACL": {
            "type": "string",
            "enum": [
              "GLOBAL",
              "WRITE_RESTRICTED",
              "READ_RESTRICTED"
            ]
          },
          "mandatory": {
            "type": "boolean"
          },
          "groupByTargetField": {
            "type": "string"
          },
          "approvalWorkflow": {
            "$ref": "#/components/schemas/ApprovalWorkflowConfiguration"
          }
        }
      },
      "UpdateTranslationActionInput": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "node": {
                "$ref": "#/components/schemas/StructuredNode"
              },
              "payload": {
                "$ref": "#/components/schemas/UpdateTranslationActionPayload"
              }
            }
          }
        ]
      },
      "UpdateTranslationActionPayload": {
        "type": "object",
        "properties": {
          "translation": {
            "$ref": "#/components/schemas/UpdateTranslationItem"
          },
          "language": {
            "type": "string"
          }
        }
      },
      "UpdateTranslationItem": {
        "type": "object",
        "properties": {
          "textLabel": {
            "type": "string"
          },
          "labelEmpty": {
            "type": "boolean"
          },
          "label": {
            "type": "object"
          },
          "number": {
            "$ref": "#/components/schemas/SingularPluralLabel"
          },
          "helpText": {
            "type": "string"
          }
        }
      },
      "UpdateViewActionInput": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/ActionBatchItem"
          },
          {
            "type": "object",
            "properties": {
              "node": {
                "$ref": "#/components/schemas/StructuredNode"
              },
              "payload": {
                "$ref": "#/components/schemas/UpdateViewActionPayload"
              }
            }
          }
        ]
      },
      "UpdateViewActionPayload": {
        "type": "object",
        "properties": {
          "renderType": {
            "type": "string"
          },
          "readOnly": {
            "type": "boolean"
          },
          "visible": {
            "type": "boolean"
          },
          "weight": {
            "type": "number",
            "format": "double"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "onTheFlyCreation": {
            "type": "boolean"
          },
          "bgColor": {
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/MetaData"
          },
          "facetViewStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacetViewState"
            }
          },
          "hiddenForRoles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "token": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "/services/mtm/v1/oauth2/token"
          }
        }
      }
    }
  }
}